// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dbfilter;

#nullable disable

namespace dbfilter.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    partial class WarehouseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("dbfilter.entity.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "10002014",
                            Description = "Irgend so ein Ding.",
                            Name = "Dingsbums"
                        });
                });

            modelBuilder.Entity("dbfilter.entity.ProductAtStorageBin", b =>
                {
                    b.Property<string>("StorageBinId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(95)");

                    b.Property<uint>("Quantity")
                        .HasColumnType("int unsigned");

                    b.HasKey("StorageBinId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsAtStorageBins");

                    b.HasData(
                        new
                        {
                            StorageBinId = "00-01-00-05-03",
                            ProductId = "10002014",
                            Quantity = 0u
                        });
                });

            modelBuilder.Entity("dbfilter.entity.StorageBin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StorageBins");

                    b.HasData(
                        new
                        {
                            Id = "00-01-00-05-03",
                            WarehouseId = new Guid("de4452fc-c898-44fc-bdf9-0401c9c1966b")
                        });
                });

            modelBuilder.Entity("dbfilter.entity.Warehouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de4452fc-c898-44fc-bdf9-0401c9c1966b"),
                            Name = "Someplace"
                        });
                });

            modelBuilder.Entity("dbfilter.entity.ProductAtStorageBin", b =>
                {
                    b.HasOne("dbfilter.entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dbfilter.entity.StorageBin", "StorageBin")
                        .WithMany()
                        .HasForeignKey("StorageBinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StorageBin");
                });

            modelBuilder.Entity("dbfilter.entity.StorageBin", b =>
                {
                    b.HasOne("dbfilter.entity.Warehouse", "Warehouse")
                        .WithMany("Bins")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("dbfilter.entity.Warehouse", b =>
                {
                    b.Navigation("Bins");
                });
#pragma warning restore 612, 618
        }
    }
}
